<?xml version="1.0"?>
<launch>

  <!-- robot description, kinematics, limits, ... -->
  <include file="$(find omnirob_robin_moveit)/launch/include/planning_context.launch" />

  <!-- GNU project debugger (gdb) Option -->
  <arg name="debug" default="false" /> <!-- disabled -->
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix"
	   value="gdb -x $(find omnirob_robin_moveit)/launch/gdb_settings.gdb --ex run --args" />

  <!-- Verbose Mode Option -->
  <arg name="info" default="$(arg debug)" /> <!-- disabled -->
  <arg unless="$(arg info)" name="command_args" value="" />
  <arg     if="$(arg info)" name="command_args" value="--debug" />

  <!-- move_group settings -->
  <arg name="allow_trajectory_execution" default="true"/>
  <arg name="fake_execution" default="false"/>
  <arg name="max_safe_path_cost" default="1"/> <!-- maximal costs for a path that is allowed to be considered safe -->
  <arg name="jiggle_fraction" default="0.05" /> <!-- it is used to slightly change the start value if the start value is in collision -->
  <arg name="publish_monitored_planning_scene" default="true"/>

  <!-- Planning Functionality -->
  <include ns="move_group" file="$(find omnirob_robin_moveit)/launch/include/planning_pipeline.launch.xml">
    <arg name="pipeline" value="ompl" />
  </include>

  <!-- Trajectory Execution Functionality -->
  <include ns="move_group" file="$(find omnirob_robin_moveit)/launch/include/omnirob_robin_moveit_controller_manager.launch.xml" />

  <!-- Sensors Functionality -->
  <include ns="move_group" file="$(find omnirob_robin_moveit)/launch/include/sensor_manager.launch.xml" if="$(arg allow_trajectory_execution)">
    <arg name="moveit_sensor_manager" value="omnirob_robin" />
  </include>
 
  <!-- Start the actual move_group node/action server -->
  <node name="move_group" launch-prefix="$(arg launch_prefix)" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="$(arg command_args)">
    <!-- Set the display variable, in case OpenGL code is used internally -->
    <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

    <param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
    <param name="max_safe_path_cost" value="$(arg max_safe_path_cost)"/>
    <param name="jiggle_fraction" value="$(arg jiggle_fraction)" />

    <!-- MoveGroup capabilities to load -->
    <param name="capabilities" value="move_group/MoveGroupCartesianPathService
				                      move_group/MoveGroupExecuteService
				                      move_group/MoveGroupKinematicsService
				                      move_group/MoveGroupMoveAction
				                      move_group/MoveGroupPickPlaceAction
				                      move_group/MoveGroupPlanService
				                      move_group/MoveGroupQueryPlannersService
				                      move_group/MoveGroupStateValidationService
				                      move_group/MoveGroupGetPlanningSceneService
				                      move_group/ClearOctomapService
				                      " />

    <!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->
    <param name="planning_scene_monitor/publish_planning_scene" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_geometry_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_state_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_transforms_updates" value="$(arg publish_monitored_planning_scene)" />

    <param name="trajectory_execution/execution_duration_monitoring" value="false"/>

    <remap from="/joint_states" to="/omnirob_robin/joint_states"/>
  </node>

</launch>
